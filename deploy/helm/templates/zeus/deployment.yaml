apiVersion: apps/v1
kind: Deployment
metadata:
  name: zeus
  namespace: {{ .Values.global.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.global.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: zeus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zeus
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - zeus
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xmx1024m -Xms1024m -Dspring.config.location=/cfg/application.yml
        image: "{{ .Values.global.repository }}/{{ .Values.global.zeus.image }}:{{ .Values.global.zeus.tag }}"
        imagePullPolicy: {{ .Values.global.zeus.pullPolicy }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health
            port: api
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: zeus
        ports:
        - containerPort: 8080
          name: api
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: api
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.global.zeus.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /cfg/application.yml
          name: zeus-config
          subPath: application.yml
        - mountPath: /var/run
          name: docker
      dnsPolicy: ClusterFirst
      {{- with .Values.global.zeus.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: zeus
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: application-prd.yml
            path: application.yml
          name: zeus-config
        name: zeus-config
      - hostPath:
          path: /var/run
          type: ""
        name: docker